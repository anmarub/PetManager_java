/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;
import Class.*;
import Controller.*;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellStyle;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author andres.rubiano
 */
public class frmPet extends javax.swing.JFrame {
    ctlPet ctlMascota;
    LinkedList<clsPet> ListaObjectoPerro = new LinkedList<>();
    
    
    /**
     * Creates new form frmPet
     */
    public frmPet() {
        initComponents();
        this.ctlMascota = new ctlPet();
        this.ListaObjectoPerro = ctlMascota.ListMascota("Perro");
        this.LlenarJlist();
        this.reporteSaludMascotas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaMascotas = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        txtCodigoDog = new javax.swing.JTextField();
        lblCodigoDog = new javax.swing.JLabel();
        lblAnoDog = new javax.swing.JLabel();
        txtAnoDog = new javax.swing.JTextField();
        lblNombreDog = new javax.swing.JLabel();
        txtNombreDog = new javax.swing.JTextField();
        txtColorDog = new javax.swing.JTextField();
        lblColorDog = new javax.swing.JLabel();
        lblEstadoSaludDog = new javax.swing.JLabel();
        cbEstadoSaludDog = new javax.swing.JComboBox<>();
        lblRazaDog = new javax.swing.JLabel();
        cbRazaDog = new javax.swing.JComboBox<>();
        btnCrearDog = new javax.swing.JButton();
        btnBuscarDog = new javax.swing.JButton();
        btnActualizarDog = new javax.swing.JButton();
        btnEliminarDog = new javax.swing.JButton();
        cbPedigreeDog = new javax.swing.JCheckBox();
        txtDogId = new javax.swing.JTextField();
        txtPetId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnBuscarCat = new javax.swing.JButton();
        btnActualizarCat = new javax.swing.JButton();
        btnEliminarCat = new javax.swing.JButton();
        btnCrearCat = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoCat = new javax.swing.JTextField();
        txtNombreCat = new javax.swing.JTextField();
        txtAnoCat = new javax.swing.JTextField();
        txtColorCat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbEstadoSaludCat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbRazaCat = new javax.swing.JComboBox<>();
        jpanelReporteMascotas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnExportaInfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setToolTipText("pet1");

        listaMascotas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Pet 1", "Pet 2", "Pet 3", "Pet 4", "Pet 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaMascotas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lista de Mascotas", jPanel1);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtCodigoDog.setName(""); // NOI18N

        lblCodigoDog.setForeground(new java.awt.Color(102, 102, 102));
        lblCodigoDog.setText("Codigo");

        lblAnoDog.setForeground(new java.awt.Color(102, 102, 102));
        lblAnoDog.setText("AÃ±o Nacimiento");

        txtAnoDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoDogActionPerformed(evt);
            }
        });

        lblNombreDog.setForeground(new java.awt.Color(102, 102, 102));
        lblNombreDog.setText("Nombre");

        lblColorDog.setForeground(new java.awt.Color(102, 102, 102));
        lblColorDog.setText("Color");

        lblEstadoSaludDog.setForeground(new java.awt.Color(102, 102, 102));
        lblEstadoSaludDog.setText("Estado Salud");

        cbEstadoSaludDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Saludable", "Enfermo", "En Cirujia" }));

        lblRazaDog.setForeground(new java.awt.Color(102, 102, 102));
        lblRazaDog.setText("Raza");

        cbRazaDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Criollo", "Pastor Aleman", "Labrador" }));

        btnCrearDog.setBackground(new java.awt.Color(153, 255, 153));
        btnCrearDog.setForeground(new java.awt.Color(102, 102, 102));
        btnCrearDog.setText("Crear");
        btnCrearDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDogActionPerformed(evt);
            }
        });

        btnBuscarDog.setBackground(new java.awt.Color(153, 255, 153));
        btnBuscarDog.setForeground(new java.awt.Color(102, 102, 102));
        btnBuscarDog.setText("Buscar");
        btnBuscarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDogActionPerformed(evt);
            }
        });

        btnActualizarDog.setBackground(new java.awt.Color(153, 255, 153));
        btnActualizarDog.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarDog.setText("Editar");
        btnActualizarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarDogActionPerformed(evt);
            }
        });

        btnEliminarDog.setBackground(new java.awt.Color(255, 153, 153));
        btnEliminarDog.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarDog.setText("Eliminar");
        btnEliminarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDogActionPerformed(evt);
            }
        });

        cbPedigreeDog.setBackground(new java.awt.Color(204, 204, 204));
        cbPedigreeDog.setForeground(new java.awt.Color(102, 102, 102));
        cbPedigreeDog.setText("Pedigree");
        cbPedigreeDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPedigreeDogActionPerformed(evt);
            }
        });

        txtPetId.setEditable(false);
        txtPetId.setToolTipText("");

        jLabel8.setText("ID Mascota");

        jLabel9.setText("ID Perro");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnCrearDog)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarDog)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarDog)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarDog)
                        .addGap(90, 90, 90))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblEstadoSaludDog)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbEstadoSaludDog, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblAnoDog)
                                .addGap(18, 18, 18)
                                .addComponent(txtAnoDog, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(lblCodigoDog))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCodigoDog, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPetId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblColorDog)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(lblRazaDog)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblNombreDog)
                                            .addComponent(jLabel9))
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombreDog, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(cbRazaDog, 0, 133, Short.MAX_VALUE)
                                    .addComponent(txtDogId))))
                        .addGap(60, 60, 60))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(cbPedigreeDog)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDogId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPetId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoDog, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreDog)
                    .addComponent(txtCodigoDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnoDog)
                    .addComponent(lblColorDog)
                    .addComponent(txtAnoDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoSaludDog)
                    .addComponent(cbEstadoSaludDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRazaDog)
                    .addComponent(cbRazaDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cbPedigreeDog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarDog)
                    .addComponent(btnActualizarDog)
                    .addComponent(btnEliminarDog)
                    .addComponent(btnCrearDog))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Administrador de Perros", jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnBuscarCat.setText("Buscar");
        btnBuscarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCatActionPerformed(evt);
            }
        });

        btnActualizarCat.setText("Actualizar");

        btnEliminarCat.setText("Eliminar");

        btnCrearCat.setText("Crear");
        btnCrearCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCatActionPerformed(evt);
            }
        });

        jLabel2.setText("Codigo");

        jLabel3.setText("AÃ±o Nacimiento");

        jLabel4.setText("Nombre");

        jLabel5.setText("Color");

        txtCodigoCat.setName(""); // NOI18N

        txtAnoCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoCatActionPerformed(evt);
            }
        });

        jLabel6.setText("Estado Salud");

        cbEstadoSaludCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Saludable", "Enfermo", "En Cirujia" }));

        jLabel7.setText("Raza");

        cbRazaCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Angora", "Persa", "Esfinge" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbEstadoSaludCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtCodigoCat, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtAnoCat, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreCat, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbRazaCat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnCrearCat)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarCat)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarCat)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarCat)
                        .addGap(30, 30, 30)))
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodigoCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtAnoCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbEstadoSaludCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cbRazaCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCat)
                    .addComponent(btnActualizarCat)
                    .addComponent(btnEliminarCat)
                    .addComponent(btnCrearCat))
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("Administrador de Gatos", jPanel2);

        javax.swing.GroupLayout jpanelReporteMascotasLayout = new javax.swing.GroupLayout(jpanelReporteMascotas);
        jpanelReporteMascotas.setLayout(jpanelReporteMascotasLayout);
        jpanelReporteMascotasLayout.setHorizontalGroup(
            jpanelReporteMascotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );
        jpanelReporteMascotasLayout.setVerticalGroup(
            jpanelReporteMascotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Reporte", jpanelReporteMascotas);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("Administrador de Mascotas");

        btnExportaInfo.setText("Exportar");
        btnExportaInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportaInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExportaInfo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExportaInfo)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void reporteSaludMascotas(){
    LinkedList<clsReportePorEstadoSalud> reporteMascotas = ctlMascota.ListMascotaEstadoSalud();
        DefaultPieDataset informacion = new DefaultPieDataset();
        
        for (clsReportePorEstadoSalud agregar : reporteMascotas) {
            informacion.setValue(agregar.getEstadoSalud(), agregar.getCantidadMascotas());
        }
        JFreeChart grafico = ChartFactory.createPieChart("Clasificacion de Mascostas por Estado de Salud", informacion, true, true, true);
        ChartPanel panel = new ChartPanel(grafico);
        panel.setMouseWheelEnabled(true);
        jpanelReporteMascotas.setLayout(new java.awt.BorderLayout());
        jpanelReporteMascotas.add(panel, BorderLayout.CENTER);
        jpanelReporteMascotas.validate();
        
    }
    private void btnCrearCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCatActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnCrearCatActionPerformed

    private void btnBuscarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarCatActionPerformed

    private void txtAnoCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoCatActionPerformed

    private void txtAnoDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoDogActionPerformed

    private void btnCrearDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDogActionPerformed
        //JOptionPane.showMessageDialog(this, "Esto Es una prueba para crear el perro");
        try{
            String codigoPerro = txtCodigoDog.getText();
            String nombrePerro = txtNombreDog.getText();
            String colorPerro = txtColorDog.getText();
            int anoPerro = Integer.parseInt(txtAnoDog.getText());
            String raza = cbRazaDog.getSelectedItem().toString();
            String EstadoSaludPerro = cbEstadoSaludDog.getSelectedItem().toString();
            boolean PedigreePerro = cbPedigreeDog.isSelected();

            if(codigoPerro.equals("") || nombrePerro.equals("") || colorPerro.equals("")){
                JOptionPane.showMessageDialog(this, "Informacion Vacia en los campos Codigo, Nombre y Color", "Error Informacion Mascota", 1);
            }else{
                clsDog perro = new clsDog(0,raza, PedigreePerro, codigoPerro, nombrePerro, anoPerro, colorPerro, EstadoSaludPerro,0);
                ctlMascota.createMascota(perro);
                //ListaObjectoPerro.add(perro);
                this.LlenarJlist();
                this.clearCamposPerro();
                JOptionPane.showMessageDialog(this, "Informacion Guardada con Exito", "Confirmacion de Almacenamiento", 1);
            }
            
        }
        catch(Exception error){
            JOptionPane.showMessageDialog(this, "Por favor agrege un AÃ±o Correcto", "Erro AÃ±o Mascota", 1);
        }
    }//GEN-LAST:event_btnCrearDogActionPerformed

    private void clearCamposPerro(){
        txtCodigoDog.setText("");
        txtNombreDog.setText("");
        txtColorDog.setText("");
        txtAnoDog.setText("");
        txtPetId.setText("");
        txtDogId.setText("");
        cbRazaDog.setSelectedIndex(0);
        cbEstadoSaludDog.setSelectedIndex(0);
        cbPedigreeDog.setSelected(false);
    }

    private void LlenarJlist(){
        DefaultListModel modelo = new DefaultListModel();
        int index = 0;
        for(clsPet perro : ListaObjectoPerro){
            String data = perro.getCode() + " - " + perro.getName() + " - " + perro.getColor() + "- Perro";
            modelo.add(index, data);
            index++;
        }
        listaMascotas.setModel(modelo);
    }

    private void btnBuscarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDogActionPerformed
        // Se toma el codigo de busqueda ingresado en el textbo y lo asignamos a una variable
        String codigoBusqueda = txtCodigoDog.getText();
        clsDog perro = (clsDog) ctlMascota.searchMascota(codigoBusqueda, "Perro");
        
        if(perro == null){
            JOptionPane.showMessageDialog(this, "Codigo de Mascota no Encontrado");
        }else{
            txtPetId.setText(perro.getPetId()+"");
            txtDogId.setText(perro.getDogId()+"");
            txtNombreDog.setText(perro.getName());
            txtColorDog.setText(perro.getColor());
            txtAnoDog.setText(perro.getborn_Year() + "");
            cbEstadoSaludDog.setSelectedItem(perro.getHealth_status());
            cbRazaDog.setSelectedItem(perro.getBreed());
            cbPedigreeDog.setSelected(perro.isPedigree());
        }
        
        //Definimos una variable para definir si la busqueda fue exitosa
        /*boolean NoEncontrado = false;
        // Definimos un ciclo para buscar en la lista el codigo ingresado, complementamos con un condicional
        for (clsDog perro : ListaObjectoPerro){
            if (perro.getCode().equals(codigoBusqueda)){
                txtNombreDog.setText(perro.getName());
                txtAnoDog.setText(perro.getborn_Year() + "");
                txtColorDog.setText(perro.getColor());
                cbEstadoSaludDog.setSelectedItem(perro.getHealth_status());
                cbRazaDog.setSelectedItem(perro.getBreed());
                cbPedigreeDog.setSelected(perro.isPedigree());
                NoEncontrado = true;
                break;
            }
        }*/
        
    }//GEN-LAST:event_btnBuscarDogActionPerformed

    private void cbPedigreeDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPedigreeDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPedigreeDogActionPerformed

    private void btnActualizarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarDogActionPerformed
            String codigo = txtCodigoDog.getText();
            String nombre = txtNombreDog.getText();
            String color = txtColorDog.getText();
            int anoPerro = Integer.parseInt(txtAnoDog.getText());
            String raza = cbRazaDog.getSelectedItem().toString();
            String EstadoSaludPerro = cbEstadoSaludDog.getSelectedItem().toString();
            boolean PedigreePerro = cbPedigreeDog.isSelected();
            try {
                int dogId = Integer.parseInt(txtDogId.getText());
                int petId = Integer.parseInt(txtPetId.getText());
                clsDog perro = new clsDog(dogId, raza, PedigreePerro, codigo, nombre, anoPerro, color, EstadoSaludPerro, petId);    
                boolean respuesta = ctlMascota.updateMascota(perro);

                if(respuesta){
                    this.clearCamposPerro();
                    JOptionPane.showMessageDialog(this, "Registro Actualizado", "Confirmacion!", 2);
                }else{
                    JOptionPane.showMessageDialog(this, "Error al Actualizar", "Error de Actualizacion", 1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Busque el Registro a editar", "Error de Edicion", 1);
            }

    }//GEN-LAST:event_btnActualizarDogActionPerformed

    private void btnEliminarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDogActionPerformed
        // Se toma el codigo de busqueda ingresado en el textbo y lo asignamos a una variable
        String codigoBusqueda = txtCodigoDog.getText();
        //Definimos una variable para definir si la busqueda fue exitosa
        boolean NoEncontrado = false;
        // Definimos un ciclo para buscar en la lista el codigo ingresado, complementamos con un condicional
      
        if(!NoEncontrado){

            JOptionPane.showMessageDialog(this, "Codigo de Mascota no Encontrado");
        }
    }//GEN-LAST:event_btnEliminarDogActionPerformed

    private void btnExportaInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportaInfoActionPerformed
        
        HSSFWorkbook libroExcel = new HSSFWorkbook();
        HSSFSheet HojaExcel = libroExcel.createSheet();
        libroExcel.setSheetName(0, "Perros");

        //Definimos el objecto tipo String para los nombres de los encabezados
        String[] encabezados = new String[]{
          "Codigo", "Nombre Mascota", "Color", "Estado Salud", "Pedigree"  
        };
        
        CellStyle encabezadosEstilos = libroExcel.createCellStyle();
        HSSFFont stiloLetra = libroExcel.createFont();
        stiloLetra.setBold(true);
        stiloLetra.setItalic(true);
        encabezadosEstilos.setFont(stiloLetra);
        
        HSSFRow FilaEncabezado = HojaExcel.createRow(0);
        //Iteramos para el encbezado del informe
        for (int i = 0; i < encabezados.length; i++) {
            String Encabezados = encabezados[i];
            HSSFCell celdaNueva = FilaEncabezado.createCell(i);
            celdaNueva.setCellStyle(encabezadosEstilos);
            celdaNueva.setCellValue(Encabezados);
        }    

        //Iteramos informacion para las lineas del informe
        for (int j = 0; j < ListaObjectoPerro.size(); j++) {
            HSSFRow filaDatos = HojaExcel.createRow(j+1);
            String Codigo = ListaObjectoPerro.get(j).getCode();
            String nombre = ListaObjectoPerro.get(j).getName();
            String color = ListaObjectoPerro.get(j).getColor();
            String EstadoSalud = ListaObjectoPerro.get(j).getHealth_status();
            boolean Pedigree = ((clsDog) ListaObjectoPerro.get(j)).isPedigree();
            String PedigreeString = Pedigree ? "SI" : "NO";
            filaDatos.createCell(0).setCellValue(Codigo);
            filaDatos.createCell(1).setCellValue(nombre);
            filaDatos.createCell(2).setCellValue(color);
            filaDatos.createCell(3).setCellValue(EstadoSalud);
            filaDatos.createCell(4).setCellValue(PedigreeString);
        }
            try {
                FileOutputStream archivo = new FileOutputStream("Reporte_Perros.xls");
                        libroExcel.write(archivo);
                        archivo.close();
                        JOptionPane.showMessageDialog(this, "Informacion Generada Correctamente!!", "Ok Informacion", 2);
                        } catch (FileNotFoundException ex) {
                Logger.getLogger(frmPet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(frmPet.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        
    }//GEN-LAST:event_btnExportaInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarCat;
    private javax.swing.JButton btnActualizarDog;
    private javax.swing.JButton btnBuscarCat;
    private javax.swing.JButton btnBuscarDog;
    private javax.swing.JButton btnCrearCat;
    private javax.swing.JButton btnCrearDog;
    private javax.swing.JButton btnEliminarCat;
    private javax.swing.JButton btnEliminarDog;
    private javax.swing.JButton btnExportaInfo;
    private javax.swing.JComboBox<String> cbEstadoSaludCat;
    private javax.swing.JComboBox<String> cbEstadoSaludDog;
    private javax.swing.JCheckBox cbPedigreeDog;
    private javax.swing.JComboBox<String> cbRazaCat;
    private javax.swing.JComboBox<String> cbRazaDog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jpanelReporteMascotas;
    private javax.swing.JLabel lblAnoDog;
    private javax.swing.JLabel lblCodigoDog;
    private javax.swing.JLabel lblColorDog;
    private javax.swing.JLabel lblEstadoSaludDog;
    private javax.swing.JLabel lblNombreDog;
    private javax.swing.JLabel lblRazaDog;
    private javax.swing.JList<String> listaMascotas;
    private javax.swing.JTextField txtAnoCat;
    private javax.swing.JTextField txtAnoDog;
    private javax.swing.JTextField txtCodigoCat;
    private javax.swing.JTextField txtCodigoDog;
    private javax.swing.JTextField txtColorCat;
    private javax.swing.JTextField txtColorDog;
    private javax.swing.JTextField txtDogId;
    private javax.swing.JTextField txtNombreCat;
    private javax.swing.JTextField txtNombreDog;
    private javax.swing.JTextField txtPetId;
    // End of variables declaration//GEN-END:variables
}
